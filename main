--BEGINNING
Interesting article: https://bit.ly/3bVMhZF

--Article: Denormalized vs Normalized Data
https://betterprogramming.pub/normalization-vs-denormalization-7470bb20618d

--Run only 1 model in the console
dbt run --select

--Materialize a table instead of a View
{{ config (
    materialized="table"
)}}

--Generate documentation for your model
dbt docs generate

--Build dependencies between models - MODULARITY
select * from {{ ref('stg_customers')}}

--Link Sources in the model
from {{ source('jaffle_shop', 'customers') }}

--Interesting command learn at DBL Course -> The COALESCE function takes a number of arguments and returns the first non-NULL argument. In case all arguments are NULL, the COALESCE function returns NULL.
--Article: https://www.mysqltutorial.org/mysql-coalesce/#:~:text=Introduction%20to%20MySQL%20COALESCE%20function.%20The%20following%20illustrates,arguments%20are%20NULL%2C%20the%20COALESCE%20function%20returns%20NULL.
COALESCE(value1,value2,...);
SELECT COALESCE(NULL, 0);  -- 0
SELECT COALESCE(NULL, NULL); -- NULL;
--To substitute the NULL value in the result set, you can use the COALESCE function as follows:
SELECT customerName, city, COALESCE(state, 'N/A'), country FROM customers;

--Example of testing over a YML file.
models:
  - name: stg_customers
    columns: 
      - name: customer_id
        tests:
          - unique
          - not_null
          
--Interesting command learn at DBT course -> The HAVING function. The difference between the having and where clause in SQL is that the where clause cannot be used with aggregates, but the having clause can.
--Article: https://www.geeksforgeeks.org/having-vs-where-clause-in-sql/#:~:text=The%20difference%20between%20the%20having%20and%20where%20clause,aggregated%20data.%20Let%20us%20consider%20below%20table%20%E2%80%98Marks%E2%80%99.
SELECT Student, Score FROM Marks WHERE Score >=40
SELECT Student, SUM(score) AS total FROM Marks GROUP BY Student
HAVING total > 70
